name: Release

permissions:
  contents: write

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Release - ${{ matrix.platform.target }}
    runs-on: ubuntu-latest
    container: ghcr.io/blackdex/rust-musl:${{ matrix.platform.tag }}
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            tag: aarch64-musl-stable
            artifact: csvs_linux_aarch64
          - target: x86_64-unknown-linux-musl
            tag: x86_64-musl-stable
            artifact: csvs_linux_x86_64
    steps:
      - uses: actions/checkout@master
      - run: cargo build --release
      - run: |
          mkdir ${{ matrix.platform.artifact }}
          cp *.md ${{ matrix.platform.artifact }}
          cp target/${{ matrix.platform.target }}/release/csvs ${{ matrix.platform.artifact }}
          tar czf ${{ matrix.platform.artifact }}.tar.gz -C ${{ matrix.platform.artifact }} .
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact }}
          path: ${{ matrix.platform.artifact }}.tar.gz
  build-macos:
    name: Release - universal-apple-darwin
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: dtolnay/rust-toolchain@stable
      - run: |
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
      - run: |
          rustup target add x86_64-apple-darwin
          cargo build --release --target x86_64-apple-darwin
      - run: |
          mkdir csvs_macos_universal
          lipo -create -output csvs_macos_universal/csvs target/aarch64-apple-darwin/release/csvs target/x86_64-apple-darwin/release/csvs
      - run: |
          cp *.md csvs_macos_universal
          hdiutil create -srcfolder csvs_macos_universal -format UDZO csvs_macos_universal.dmg
      - uses: lando/code-sign-action@v3
        with:
          file: csvs_macos_universal.dmg
          apple-notary-user: ${{ secrets.APPLE_NOTARY_USER }}
          apple-notary-password: ${{ secrets.APPLE_NOTARY_PASSWORD }}
          apple-product-id: jp.koma-private.csvs
          apple-team-id: 22L7S8RX9L
          certificate-data: ${{ secrets.APPLE_CERT_DATA }}
          certificate-password: ${{ secrets.APPLE_CERT_PASSWORD }}
          options: --timestamp --options runtime
      - run: xcrun stapler staple csvs_macos_universal.dmg    
      - uses: actions/upload-artifact@v4
        with:
          name: csvs_macos_universal
          path: csvs_macos_universal.dmg
  build-windows:
    name: Release - ${{ matrix.platform.target }}
    runs-on: windows-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-pc-windows-msvc          
            artifact: csvs_windows_aarch64
          - target: x86_64-pc-windows-msvc          
            artifact: csvs_windows_x86_64
    steps:
      - uses: actions/checkout@master
      - uses: dtolnay/rust-toolchain@stable
      - run: |
          rustup target add ${{ matrix.platform.target }}
          cargo build --release --target ${{ matrix.platform.target }}
      - run: |
          New-Item ${{ matrix.platform.artifact }} -ItemType Directory
          Copy-Item *.md -Destination ${{ matrix.platform.artifact }}
          Copy-Item target/${{ matrix.platform.target }}/release/csvs.exe -Destination ${{ matrix.platform.artifact }}
          Compress-Archive -Path ${{ matrix.platform.artifact }} -DestinationPath ${{ matrix.platform.artifact }}.zip
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact }}
          path: ${{ matrix.platform.artifact }}.zip
